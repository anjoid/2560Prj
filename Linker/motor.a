;#include "include.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Timer3 output compare A interrupt service routine
;interrupt [TIM3_COMPA] void timer3_compa_isr(void)
; 0003 0005 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0003 0006 // Place your code here
; 0003 0007 
; 0003 0008 }
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;
;// Timer4 output compare A interrupt service routine
;interrupt [TIM4_COMPA] void timer4_compa_isr(void)
; 0003 000C {
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0003 000D // Place your code here
; 0003 000E 
; 0003 000F }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;/***************************************/
;
;void Xcycle(char speed)
; 0003 0014 {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0003 0015     //int steps;
; 0003 0016 /* Timer/Counter 3 initialization
; 0003 0017 Clock value: 250.000 kHz
; 0003 0018 Mode: CTC top=OCR3A
; 0003 0019 OC3A output: Set
; 0003 001A Compare A Match Interrupt: On  */
; 0003 001B     TCCR3A=0xC1;
;	speed -> Y+0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0003 001C     TCCR3B=0x0B;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0003 001D     TCNT3H=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0003 001E     TCNT3L=speed;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0003 001F     ICR3H=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0003 0020     ICR3L=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0003 0021     OCR3AH=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0003 0022     OCR3AL=0xF6;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0003 0023     OCR3BH=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0003 0024     OCR3BL=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0003 0025     OCR3CH=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0003 0026     OCR3CL=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0003 0027 
; 0003 0028 
; 0003 0029 
; 0003 002A 
; 0003 002B //    PORTH6 = 1;
; 0003 002C //    XSYNC=0;
; 0003 002D //    XDIR=0;
; 0003 002E //    XSTEP=0;
; 0003 002F //
; 0003 0030 //    delay_ms(50);
; 0003 0031 //    XRST=0;
; 0003 0032 //    delay_ms(5);
; 0003 0033 //    XRST=1;
; 0003 0034 //
; 0003 0035 //    delay_ms(50);
; 0003 0036 //    XSYNC=1;
; 0003 0037 //    delay_ms(10);
; 0003 0038 //    XSYNC=1;
; 0003 0039 //
; 0003 003A //    steps = 100;
; 0003 003B //    while(steps--)
; 0003 003C //    {
; 0003 003D //        XSTEP=1;
; 0003 003E //        delay_ms(2);
; 0003 003F //        XSTEP=0;
; 0003 0040 //        delay_ms(speed);
; 0003 0041 //    }
; 0003 0042 //
; 0003 0043 //    delay_ms(50);
; 0003 0044 //
; 0003 0045 //    XDIR=1;
; 0003 0046 //    steps = 100;
; 0003 0047 //    while(steps--)
; 0003 0048 //    {
; 0003 0049 //        XSTEP=1;
; 0003 004A //        delay_ms(2);
; 0003 004B //        XSTEP=0;
; 0003 004C //        delay_ms(speed);
; 0003 004D //    }
; 0003 004E 
; 0003 004F }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;
;
;void Ymove(int steps,char speed)
; 0003 0053 {
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0003 0054     Ysteps = steps;
;	steps -> Y+1
;	speed -> Y+0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0003 0055     /*Clock value: 250.000 kHz
; 0003 0056     // Mode: Ph. & fr. cor. PWM top=ICR4
; 0003 0057     // OC4A output: Inverted
; 0003 0058     // Compare A Match Interrupt: On   */
; 0003 0059     TCCR4A=0xC0;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0003 005A     TCCR4B=0x0b;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0003 005B     TCNT4H=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0003 005C     TCNT4L=0x08;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0003 005D     ICR4H=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0003 005E     ICR4L=speed;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0003 005F     OCR4AH=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0003 0060     OCR4AL=0x26;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0003 0061     OCR4BH=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0003 0062     OCR4BL=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0003 0063     OCR4CH=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0003 0064     OCR4CL=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0003 0065 
; 0003 0066 
; 0003 0067 
; 0003 0068 
; 0003 0069 
; 0003 006A 
; 0003 006B //
; 0003 006C //    YRST=1;
; 0003 006D //    YSYNC=0;
; 0003 006E //    YDIR=0;
; 0003 006F //    YSTEP=0;
; 0003 0070 //
; 0003 0071 //    delay_ms(50);
; 0003 0072 //    YRST=0;
; 0003 0073 //    delay_ms(5);
; 0003 0074 //    YRST=1;
; 0003 0075 //
; 0003 0076 //    delay_ms(50);
; 0003 0077 //    YSYNC=1;
; 0003 0078 //    delay_ms(10);
; 0003 0079 //    YSYNC=0;
; 0003 007A //
; 0003 007B //    steps = 100;
; 0003 007C //    while(step--)
; 0003 007D //    {
; 0003 007E //        YSTEP=1;
; 0003 007F //        delay_ms(2);
; 0003 0080 //        YSTEP=0;
; 0003 0081 //        delay_ms(speed);
; 0003 0082 //    }
; 0003 0083 //
; 0003 0084 //    delay_ms(50);
; 0003 0085 //
; 0003 0086 //    YDIR=1;
; 0003 0087 //    steps = 100;
; 0003 0088 //    while(step--)
; 0003 0089 //    {
; 0003 008A //        YSTEP=1;
; 0003 008B //        delay_ms(2);
; 0003 008C //        YSTEP=0;
; 0003 008D //        delay_ms(speed);
; 0003 008E //    }
; 0003 008F }
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;
;
;void Xmove(int steps,char speed)
; 0003 0093 {
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0003 0094 
; 0003 0095 }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;
;void Ystop(void)
; 0003 0098 {
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0003 0099     TCCR4A=0x0;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0003 009A     TCCR4B=0x0;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0003 009B }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;
;void Xstop(void)
; 0003 009E {
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0003 009F     TCCR3A=0x0;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0003 00A0     TCCR3B=0x0;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0003 00A1 }
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;
;
;
;
;char motorTest(char cmd)
; 0003 00A7 {
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0003 00A8     if(cmd & 0x80)
;	cmd -> Y+0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0003 00A9             {
; 0003 00AA              Xcycle(cmd & 0x0F);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0003 00AB             }
; 0003 00AC     if(cmd & 0x40)
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0003 00AD             {
; 0003 00AE              Ymove(10000,cmd & 0x0F);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0003 00AF             }
; 0003 00B0     if(cmd & 0x20)
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0003 00B1             {
; 0003 00B2 
; 0003 00B3 
; 0003 00B4             }
; 0003 00B5     if(cmd & 0x10)
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0003 00B6             {
; 0003 00B7              Xstop();
;PCODE: $00000083 VOL: 0
; 0003 00B8              Ystop();
;PCODE: $00000084 VOL: 0
; 0003 00B9             }
; 0003 00BA     return 1;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0003 00BB }
;PCODE: $00000089 VOL: 0
