;#include "include.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;/***************************************/
;
;void Xcycle(char speed)
; 0003 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0003 0007     int steps;
; 0003 0008 
; 0003 0009     PORTH6 = 1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	speed -> Y+2
;	steps -> R16,R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0003 000A     XSYNC=0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0003 000B     XDIR=0;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0003 000C     XSTEP=0;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0003 000D 
; 0003 000E     delay_ms(50);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0003 000F     XRST=0;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0003 0010     delay_ms(5);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0003 0011     XRST=1;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0003 0012 
; 0003 0013     delay_ms(50);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0003 0014     XSYNC=1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0003 0015     delay_ms(10);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0003 0016     XSYNC=1;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0003 0017 
; 0003 0018     steps = 100;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0003 0019     while(steps--)
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0003 001A     {
; 0003 001B         XSTEP=1;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0003 001C         delay_ms(2);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0003 001D         XSTEP=0;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0003 001E         delay_ms(speed);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0003 001F     }
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0003 0020 
; 0003 0021     delay_ms(50);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0003 0022 
; 0003 0023     XDIR=1;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0003 0024     steps = 100;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0003 0025     while(steps--)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0003 0026     {
; 0003 0027         XSTEP=1;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0003 0028         delay_ms(2);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0003 0029         XSTEP=0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0003 002A         delay_ms(speed);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0003 002B     }
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0003 002C 
; 0003 002D }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;
;
;void Ymove(int steps,char speed)
; 0003 0031 {
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0003 0032     int step = steps;
; 0003 0033 
; 0003 0034     YRST=1;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;	steps -> Y+3
;	speed -> Y+2
;	step -> R16,R17
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0003 0035     YSYNC=0;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0003 0036     YDIR=0;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0003 0037     YSTEP=0;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0003 0038 
; 0003 0039     delay_ms(50);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0003 003A     YRST=0;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0003 003B     delay_ms(5);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0003 003C     YRST=1;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0003 003D 
; 0003 003E     delay_ms(50);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0003 003F     YSYNC=1;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0003 0040     delay_ms(10);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0003 0041     YSYNC=0;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0003 0042 
; 0003 0043     steps = 100;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0003 0044     while(step--)
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0003 0045     {
; 0003 0046         YSTEP=1;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0003 0047         delay_ms(2);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0003 0048         YSTEP=0;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0003 0049         delay_ms(speed);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0003 004A     }
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0003 004B 
; 0003 004C     delay_ms(50);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0003 004D 
; 0003 004E     YDIR=1;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0003 004F     steps = 100;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0003 0050     while(step--)
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0003 0051     {
; 0003 0052         YSTEP=1;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0003 0053         delay_ms(2);
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0003 0054         YSTEP=0;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0003 0055         delay_ms(speed);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0003 0056     }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0003 0057 }
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;
;
;void Xmove(int steps,char speed)
; 0003 005B {
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0003 005C 
; 0003 005D }
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;
;void Ystop(void)
; 0003 0060 {
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0003 0061 
; 0003 0062 }
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;
;void Xstop(void)
; 0003 0065 {
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0003 0066 
; 0003 0067 }
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;
;
;
;
;char motorTest(char cmd)
; 0003 006D {
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0003 006E     if(cmd & 0x80)
;	cmd -> Y+0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0003 006F     	{
; 0003 0070     	 Xcycle(2);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0003 0071     	}
; 0003 0072     if(cmd & 0x40)
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0003 0073     	{
; 0003 0074     	 Ymove(100,2);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0003 0075     	}
; 0003 0076     if(cmd & 0x20)
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0003 0077     	{
; 0003 0078 
; 0003 0079 
; 0003 007A     	}
; 0003 007B     if(cmd & 0x10)
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0003 007C     	{
; 0003 007D 
; 0003 007E 
; 0003 007F     	}
; 0003 0080     return 1;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0003 0081 }
;PCODE: $000000EF VOL: 0
