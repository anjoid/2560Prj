;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2014-3-21
;Author  : zhangjing
;Company : zhangjing
;Comments:
;1st edition for 2560 control board
;USART1 Baud Rate: 9600
;
;Chip type               : ATmega2560
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 2048
;*****************************************************/
;
;#include "include.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Declare your global variables here
;unsigned int Xsteps;
;unsigned int Ysteps;
;
;
;void init(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0022 
; 0000 0023     // Crystal Oscillator division factor: 1
; 0000 0024     #pragma optsize-
; 0000 0025     CLKPR=0x80;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0026     CLKPR=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0027     #ifdef _OPTIMIZE_SIZE_
; 0000 0028     #pragma optsize+
; 0000 0029     #endif
; 0000 002A 
; 0000 002B     // Input/Output Ports initialization
; 0000 002C     // Port A initialization
; 0000 002D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002E     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 002F     PORTA=0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0030     DDRA=0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0031 
; 0000 0032     // Port B initialization
; 0000 0033     // Func7=In Func6=Out Func5=Out Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0034     // State7=T State6=0 State5=0 State4=T State3=T State2=T State1=T State0=T
; 0000 0035     PORTB=0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0036     DDRB=0x60;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0037 
; 0000 0038     // Port C initialization
; 0000 0039     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003A     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 003B     PORTC=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 003C     DDRC=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 003D 
; 0000 003E     // Port D initialization
; 0000 003F     // Func7=Out Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0040     // State7=0 State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0041     PORTD=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0042     DDRD=0x80;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0043 
; 0000 0044     // Port E initialization
; 0000 0045     // Func7=Out Func6=In Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
; 0000 0046     // State7=0 State6=T State5=0 State4=0 State3=0 State2=T State1=T State0=T
; 0000 0047     PORTE=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0048     DDRE=0xBC;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0049 
; 0000 004A     // Port F initialization
; 0000 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004C     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004D     PORTF=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 004E     DDRF=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 004F 
; 0000 0050     // Port G initialization
; 0000 0051     // Func5=In Func4=In Func3=Out Func2=In Func1=In Func0=In
; 0000 0052     // State5=T State4=T State3=0 State2=T State1=T State0=T
; 0000 0053     PORTG=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0054     DDRG=0x08;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0055 
; 0000 0056     // Port H initialization
; 0000 0057     // Func7=Out Func6=In Func5=Out Func4=In Func3=Out Func2=Out Func1=In Func0=In
; 0000 0058     // State7=0 State6=T State5=0 State4=T State3=0 State2=0 State1=T State0=T
; 0000 0059     PORTH=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 005A     DDRH=0xAC;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 005B 
; 0000 005C     // Port J initialization
; 0000 005D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005E     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 005F     PORTJ=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0060     DDRJ=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0061 
; 0000 0062     // Port K initialization
; 0000 0063     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0064     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0065     PORTK=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0066     DDRK=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0067 
; 0000 0068     // Port L initialization
; 0000 0069     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 006A     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 006B     PORTL=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 006C     DDRL=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 006D 
; 0000 006E     // Timer/Counter 0 initialization
; 0000 006F     // Clock source: System Clock
; 0000 0070     // Clock value: Timer 0 Stopped
; 0000 0071     // Mode: Normal top=0xFF
; 0000 0072     // OC0A output: Disconnected
; 0000 0073     // OC0B output: Disconnected
; 0000 0074     TCCR0A=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0075     TCCR0B=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0076     TCNT0=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0077     OCR0A=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0078     OCR0B=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0079 
; 0000 007A     // Timer/Counter 1 initialization
; 0000 007B     // Clock source: System Clock
; 0000 007C     // Clock value: Timer1 Stopped
; 0000 007D     // Mode: Normal top=0xFFFF
; 0000 007E     // OC1A output: Discon.
; 0000 007F     // OC1B output: Discon.
; 0000 0080     // OC1C output: Discon.
; 0000 0081     // Noise Canceler: Off
; 0000 0082     // Input Capture on Falling Edge
; 0000 0083     // Timer1 Overflow Interrupt: Off
; 0000 0084     // Input Capture Interrupt: Off
; 0000 0085     // Compare A Match Interrupt: Off
; 0000 0086     // Compare B Match Interrupt: Off
; 0000 0087     // Compare C Match Interrupt: Off
; 0000 0088     TCCR1A=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0089     TCCR1B=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 008A     TCNT1H=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 008B     TCNT1L=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 008C     ICR1H=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 008D     ICR1L=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 008E     OCR1AH=0x00;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 008F     OCR1AL=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0090     OCR1BH=0x00;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0091     OCR1BL=0x00;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0092     OCR1CH=0x00;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0093     OCR1CL=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0094 
; 0000 0095     // Timer/Counter 2 initialization
; 0000 0096     // Clock source: System Clock
; 0000 0097     // Clock value: Timer2 Stopped
; 0000 0098     // Mode: Normal top=0xFF
; 0000 0099     // OC2A output: Disconnected
; 0000 009A     // OC2B output: Disconnected
; 0000 009B     ASSR=0x00;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 009C     TCCR2A=0x00;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 009D     TCCR2B=0x00;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 009E     TCNT2=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 009F     OCR2A=0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 00A0     OCR2B=0x00;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 00A1 
; 0000 00A2     // Timer/Counter 3 initialization
; 0000 00A3     // Clock source: System Clock
; 0000 00A4     // Clock value: Timer3 Stopped
; 0000 00A5     // Mode: Normal top=0xFFFF
; 0000 00A6     // OC3A output: Discon.
; 0000 00A7     // OC3B output: Discon.
; 0000 00A8     // OC3C output: Discon.
; 0000 00A9     // Noise Canceler: Off
; 0000 00AA     // Input Capture on Falling Edge
; 0000 00AB     // Timer3 Overflow Interrupt: Off
; 0000 00AC     // Input Capture Interrupt: Off
; 0000 00AD     // Compare A Match Interrupt: Off
; 0000 00AE     // Compare B Match Interrupt: Off
; 0000 00AF     // Compare C Match Interrupt: Off
; 0000 00B0     TCCR3A=0x00;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 00B1     TCCR3B=0x00;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00B2     TCNT3H=0x00;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00B3     TCNT3L=0x00;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00B4     ICR3H=0x00;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 00B5     ICR3L=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00B6     OCR3AH=0x00;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 00B7     OCR3AL=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00B8     OCR3BH=0x00;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00B9     OCR3BL=0x00;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 00BA     OCR3CH=0x00;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00BB     OCR3CL=0x00;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00BC 
; 0000 00BD     // Timer/Counter 4 initialization
; 0000 00BE     // Clock source: System Clock
; 0000 00BF     // Clock value: Timer4 Stopped
; 0000 00C0     // Mode: Normal top=0xFFFF
; 0000 00C1     // OC4A output: Discon.
; 0000 00C2     // OC4B output: Discon.
; 0000 00C3     // OC4C output: Discon.
; 0000 00C4     // Noise Canceler: Off
; 0000 00C5     // Input Capture on Falling Edge
; 0000 00C6     // Timer4 Overflow Interrupt: Off
; 0000 00C7     // Input Capture Interrupt: Off
; 0000 00C8     // Compare A Match Interrupt: Off
; 0000 00C9     // Compare B Match Interrupt: Off
; 0000 00CA     // Compare C Match Interrupt: Off
; 0000 00CB     TCCR4A=0x00;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 00CC     TCCR4B=0x00;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00CD     TCNT4H=0x00;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 00CE     TCNT4L=0x00;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00CF     ICR4H=0x00;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00D0     ICR4L=0x00;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00D1     OCR4AH=0x00;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00D2     OCR4AL=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00D3     OCR4BH=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00D4     OCR4BL=0x00;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 00D5     OCR4CH=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00D6     OCR4CL=0x00;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00D7 
; 0000 00D8     // Timer/Counter 5 initialization
; 0000 00D9     // Clock source: System Clock
; 0000 00DA     // Clock value: Timer5 Stopped
; 0000 00DB     // Mode: Normal top=0xFFFF
; 0000 00DC     // OC5A output: Discon.
; 0000 00DD     // OC5B output: Discon.
; 0000 00DE     // OC5C output: Discon.
; 0000 00DF     // Noise Canceler: Off
; 0000 00E0     // Input Capture on Falling Edge
; 0000 00E1     // Timer5 Overflow Interrupt: Off
; 0000 00E2     // Input Capture Interrupt: Off
; 0000 00E3     // Compare A Match Interrupt: Off
; 0000 00E4     // Compare B Match Interrupt: Off
; 0000 00E5     // Compare C Match Interrupt: Off
; 0000 00E6     TCCR5A=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 00E7     TCCR5B=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00E8     TCNT5H=0x00;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 00E9     TCNT5L=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00EA     ICR5H=0x00;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00EB     ICR5L=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00EC     OCR5AH=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00ED     OCR5AL=0x00;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00EE     OCR5BH=0x00;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00EF     OCR5BL=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00F0     OCR5CH=0x00;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00F1     OCR5CL=0x00;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00F2 
; 0000 00F3     // External Interrupt(s) initialization
; 0000 00F4     // INT0: Off
; 0000 00F5     // INT1: Off
; 0000 00F6     // INT2: Off
; 0000 00F7     // INT3: Off
; 0000 00F8     // INT4: Off
; 0000 00F9     // INT5: Off
; 0000 00FA     // INT6: Off
; 0000 00FB     // INT7: Off
; 0000 00FC     EICRA=0x00;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00FD     EICRB=0x00;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00FE     EIMSK=0x00;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00FF     // PCINT0 interrupt: Off
; 0000 0100     // PCINT1 interrupt: Off
; 0000 0101     // PCINT2 interrupt: Off
; 0000 0102     // PCINT3 interrupt: Off
; 0000 0103     // PCINT4 interrupt: Off
; 0000 0104     // PCINT5 interrupt: Off
; 0000 0105     // PCINT6 interrupt: Off
; 0000 0106     // PCINT7 interrupt: Off
; 0000 0107     // PCINT8 interrupt: Off
; 0000 0108     // PCINT9 interrupt: Off
; 0000 0109     // PCINT10 interrupt: Off
; 0000 010A     // PCINT11 interrupt: Off
; 0000 010B     // PCINT12 interrupt: Off
; 0000 010C     // PCINT13 interrupt: Off
; 0000 010D     // PCINT14 interrupt: Off
; 0000 010E     // PCINT15 interrupt: Off
; 0000 010F     // PCINT16 interrupt: Off
; 0000 0110     // PCINT17 interrupt: Off
; 0000 0111     // PCINT18 interrupt: Off
; 0000 0112     // PCINT19 interrupt: Off
; 0000 0113     // PCINT20 interrupt: Off
; 0000 0114     // PCINT21 interrupt: Off
; 0000 0115     // PCINT22 interrupt: Off
; 0000 0116     // PCINT23 interrupt: Off
; 0000 0117     PCMSK0=0x00;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0118     PCMSK1=0x00;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0119     PCMSK2=0x00;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 011A     PCICR=0x00;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 011B 
; 0000 011C     // Timer/Counter 0 Interrupt(s) initialization
; 0000 011D     TIMSK0=0x00;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 011E 
; 0000 011F     // Timer/Counter 1 Interrupt(s) initialization
; 0000 0120     TIMSK1=0x00;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0121 
; 0000 0122     // Timer/Counter 2 Interrupt(s) initialization
; 0000 0123     TIMSK2=0x00;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0124 
; 0000 0125     // Timer/Counter 3 Interrupt(s) initialization
; 0000 0126     TIMSK3=0x00;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0127 
; 0000 0128     // Timer/Counter 4 Interrupt(s) initialization
; 0000 0129     TIMSK4=0x00;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 012A 
; 0000 012B     // Timer/Counter 5 Interrupt(s) initialization
; 0000 012C     TIMSK5=0x00;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 012D 
; 0000 012E     // USART0 initialization
; 0000 012F     // USART0 disabled
; 0000 0130 
; 0000 0131     UCSR0B=0x0;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 0132 
; 0000 0133     // USART1 initialization
; 0000 0134     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0135     // USART1 Receiver: On
; 0000 0136     // USART1 Transmitter: On
; 0000 0137     // USART1 Mode: Asynchronous
; 0000 0138     // USART1 Baud Rate: 9600
; 0000 0139     UCSR1A=0x00;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 013A     UCSR1B=0x18;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 013B     UCSR1C=0x06;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 013C     UBRR1H=0x00;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 013D     UBRR1L=0x67;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 013E 
; 0000 013F     // USART2 initialization
; 0000 0140     // USART2 disabled
; 0000 0141     UCSR2B=0x00;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0142 
; 0000 0143     // USART3 initialization
; 0000 0144     // USART3 disabled
; 0000 0145     UCSR3B=0x00;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0146 
; 0000 0147     // Analog Comparator initialization
; 0000 0148     // Analog Comparator: Off
; 0000 0149     // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 014A     ACSR=0x80;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 014B     ADCSRB=0x00;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 014C     DIDR1=0x00;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 014D 
; 0000 014E     // ADC initialization
; 0000 014F     // ADC disabled
; 0000 0150     ADCSRA=0x00;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0151 
; 0000 0152     // SPI initialization
; 0000 0153     // SPI disabled
; 0000 0154     SPCR=0x00;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0155 
; 0000 0156     // TWI initialization
; 0000 0157     // TWI disabled
; 0000 0158     TWCR=0x00;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0159 
; 0000 015A     EI;
;PCODE: $000000EB VOL: 0
	sei
;PCODE: $000000EC VOL: 0
; 0000 015B }
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;
;
;
;
;
;
;void main(void)
; 0000 0163 {
;PCODE: $000000EF VOL: 0
; 0000 0164 // Declare your local variables here
; 0000 0165 
; 0000 0166     long int LNB_frequence;
; 0000 0167     long int sate_frequence;//
; 0000 0168     unsigned long TunerFreq;
; 0000 0169     float symbol_rate;
; 0000 016A     char str[16] = "jingle bells";
; 0000 016B     unsigned int uint;
; 0000 016C     signed int sint;
; 0000 016D     unsigned char uchar;
; 0000 016E     LNB_frequence =10750;//11300;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;	LNB_frequence -> Y+28
;	sate_frequence -> Y+24
;	TunerFreq -> Y+20
;	symbol_rate -> Y+16
;	str -> Y+0
;	uint -> R16,R17
;	sint -> R18,R19
;	uchar -> R21
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 016F     sate_frequence =11880; //92.2
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0170     symbol_rate  =28800;   //
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0171     TunerFreq = (labs(LNB_frequence-sate_frequence))*1000;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0172     init();
;PCODE: $00000103 VOL: 0
; 0000 0173 
; 0000 0174     LED_ON;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0175     delay_ms(200);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0176     LED_OFF;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0177     delay_ms(200);
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0178     LED_ON;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0179     delay_ms(200);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 017A     LED_OFF;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 017B     delay_ms(200);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 017C     LED_ON;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 017D     delay_ms(200);
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 017E     LED_OFF;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 017F     delay_ms(500);
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0180     putchar1('A');
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 0181     putchar1('B');
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 0182     putchar1('C');
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0183 
; 0000 0184     while (1)
;PCODE: $0000012B VOL: 0
; 0000 0185           {
; 0000 0186            // Place your code here
; 0000 0187             LED_OFF;
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0188             switch (getchar1())
;PCODE: $0000012E VOL: 0
; 0000 0189             {
; 0000 018A                 case 'H':
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 018B                     {
; 0000 018C                     	uprintf("tuner init and read AGC analog number and AGC register number:");
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 018D                         //tuner(TunerFreq,symbol_rate);
; 0000 018E                         uint = AGC_ORG;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 018F                         uprintf("%d",uint);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 0190                         uint = GetAGC();
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0191                         uprintf("%d",uint);
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0192                     }
; 0000 0193                     break;
;PCODE: $00000152 VOL: 0
; 0000 0194                 case 'A':
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 0195                     {
; 0000 0196                         uchar = getchar1();
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 0197                         Xcycle(uchar);
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0198                        	uint = 1000;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 0199                        	while(uint--)
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 019A                         	{
; 0000 019B                         		delay_ms(5);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 019C                         		uprintf("gyro1:%d gyro2:%d gyro3:%d AGC:%d\n",GYRO1,GYRO2,GYRO3);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 019D                     		}
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 019E                     	Xstop();
;PCODE: $0000017D VOL: 0
; 0000 019F                     }
; 0000 01A0                     break;
;PCODE: $0000017E VOL: 0
; 0000 01A1                 case 'B':
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 01A2                     {
; 0000 01A3                         uprintf("gyro1:%d gyro2:%d gyro3:%d AGC:%d\n",GYRO1,GYRO2,GYRO3,AGC_ORG);
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 01A4                     }
; 0000 01A5                     break;
;PCODE: $0000019D VOL: 0
; 0000 01A6 
; 0000 01A7                 case 'M':
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 01A8                     {
; 0000 01A9                        uchar = getchar1();
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 01AA                        uprintf("motor test with %x\n",uchar);
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 01AB                        if(uchar == 'U')
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 01AC                          Ymove(200,5);
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 01AD                        else if(uchar == 'D')
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 01AE                          Ymove(-200,5);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 01AF                        else if(uchar == 'R')
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 01B0                          Xmove(200,5);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 01B1                        else if(uchar == 'L')
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 01B2                          Ymove(-200,5);
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 01B3                        else if(uchar == 'T')
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 01B4                          motorTest(0xA0);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 01B5                        if(uchar == 'I')
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 01B6                          motorInit();
;PCODE: $000001E3 VOL: 0
; 0000 01B7                        else
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 01B8                          {
; 0000 01B9                             Xstop();
;PCODE: $000001E6 VOL: 0
; 0000 01BA                             Ystop();
;PCODE: $000001E7 VOL: 0
; 0000 01BB                          }
;PCODE: $000001E8 VOL: 0
; 0000 01BC                     }
; 0000 01BD                     break;
;PCODE: $000001E9 VOL: 0
; 0000 01BE                 case 'L':
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 01BF                     {
; 0000 01C0                        DDRE |= 0x30;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 01C1                        SCLL;
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 01C2                        SDAH;
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 01C3                        putchar1('L');
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 01C4                     }
; 0000 01C5                     break;
;PCODE: $000001F7 VOL: 0
; 0000 01C6                 case 'R':
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 01C7                     {
; 0000 01C8                         LED_ON;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 01C9                         uprintf("Enter register addr:");
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 01CA                         uchar = getchar1();
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 01CB                         Get0288Register(uchar);
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 01CC                         //uprintf("Register 0x%x value is 0x%x\n",uchar,Get0288Register(uchar));
; 0000 01CD                     }
; 0000 01CE                     break;
;PCODE: $00000208 VOL: 0
; 0000 01CF                 case 'S':
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 01D0                     {
; 0000 01D1                       uprintf("tuner test...");
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 01D2                       tunerTest(0);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 01D3                       uprintf("...done\n");
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 01D4                     }
; 0000 01D5                     break;
;PCODE: $0000021D VOL: 0
; 0000 01D6                 case 'T':
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 01D7                     {
; 0000 01D8                      LED_ON;
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 01D9                      putchar1('t');
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 01DA                      tuner(TunerFreq,symbol_rate);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 01DB                     }
; 0000 01DC                     break;
;PCODE: $0000022B VOL: 0
; 0000 01DD                 case 'U':
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 01DE                     {
; 0000 01DF                        uprintf("string means %s\n",str);
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 01E0                        uchar = 0x33;
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 01E1                        uprintf("hex 0x%x 0x%x\n",uchar,uchar+16);
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 01E2                        uchar = 0xEC;
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 01E3                        uprintf("hex 0x%x\n",uchar);
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 01E4 
; 0000 01E5                        uint = 32879;
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 01E6                        sint = -23456;
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 01E7                        uprintf("unsigned & signed int number:%u %d\n",uint,sint);
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 01E8                        uint = -2561;
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 01E9                        sint = 13456;
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 01EA                        uprintf("unsigned & signed int number:%u %d\n",uint,sint);
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 01EB                        uint = 105;
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
; 0000 01EC                        sint = -123;
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 01ED                        uprintf("unsigned & signed int number:%u %d\n",uint,sint);
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 01EE                     }
; 0000 01EF                     break;
;PCODE: $00000289 VOL: 0
; 0000 01F0             default:
;PCODE: $0000028A VOL: 0
; 0000 01F1             };
;PCODE: $0000028B VOL: 0
; 0000 01F2 
; 0000 01F3           }
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 01F4 }
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0

	.DSEG
_0x19:
	.BYTE 0x161
